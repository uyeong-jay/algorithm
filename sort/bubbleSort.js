//버블정렬: 배열의 첫부분 부터 매번 교체(정렬)되며 올라가 배열의 마지막 부분에서 두번째 반복문이 멈춰 배열 마지막 부분부터 제일 큰 숫자가 남도록하는 것을 반복 하는 정렬

//배열안 요소들을 정렬해보기
// - 정렬 메소드 배열.sort()를 써도 되지만
// - 왜 정렬이 되는지 그 안에서 이루어지는 정렬이 되는 과정을 배워보는 정렬 알고리즘 문제

const array = [13, 5, 11, 7, 23, 15];

const solution = (arr) => {
  let answer = arr; //let answer = [...arr];
  // 얕은 복사 - answer나 arr 둘중하나라도 바뀌면 둘다 바뀐다.

  for (let i = 0; i < arr.length - 1; i++) {
    //두번째 for문 안에서 arr[j + 1]를 쓰기 위해 arr.length 에서 -1을 해줘 마지막 부분은 탐색되지 않도록 하기

    for (let j = 0; j < arr.length - 1 - i; j++) {
      //배열의 첫부분 부터 정렬해 가며 올라가 배열의 마지막 부분에는 교체가 이뤄지지 않고 제일 큰 숫자가 남아 있도록 하기 위해 arr.length - 1에 - i 를 해줌

      if (arr[j] > arr[j + 1]) {
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
        //교체(정렬)
        //선택 정렬과는 다르게 두번째 for문 안에서 교체되도록 하여 매번 교체되어지도록 함(선택 정렬에 비해 효율적이지 못함)
        //배열의 첫부분 부터 매번 교체(정렬)되며 올라가 배열의 마지막 부분에서 두번째 반복문이 멈춰 배열 마지막 부분부터 제일 큰 숫자가 남도록하는 것을 반복
      }
    }
  }

  return answer;
};

console.log(solution(array));
