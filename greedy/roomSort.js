//그리디 와 정렬
//그리디 알고리즘은 탐욕 알고리즘 또는 욕심쟁이 알고리즘이라고도 불린다. 
//미래를 생각하지 않고 각 단계에서 가장 최선의 선택을 하는 알고리즘으로 각 단계에서 최선의 선택을 한 것이 전체적으로도 최선이길 바라는 알고리즘이다.
//회의실 배정 문제는 최대한 빨리 시작하는 or 끝나는 순서대로 그냥 정렬시키면 되겠지 하는 생각으로 접근하는 그리디의 대표적인 문제이다. 

//회의실 배정: 회의실을 하루동안 최대한 많은 그룹이 이용할수 있도록 하기
// - 한 배열안에 연속된 최대한 많은 좌표 배열을 정렬하여 넣기

const array = [
  [1, 4], //미팅시간 1시 ~ 4시
  [2, 3],
  [3, 5],
  [4, 6],
  [5, 7],
];

const solution = (meeting) => {
  let answer = 0; //미팅 횟수

  //1. 미팅 시간이 끝나는 시간을 기준으로 정렬하기
  //좌표의 두번째 요소를 기준으로 정렬 - sort(): 원본이 바뀜
  meeting.sort((a, b) => {
    if (a[1] === b[1]) return a[0] - b[0]; //끝나는 시간이 같으면 시작하는 시간순으로 정렬
    else return a[1] - b[1]; //끝나는 시간이 다르면 끝나는 시간순으로 정렬
  });

  //2. 끝나는 시간을 기준으로 같거나 큰 그 다음 올 수 있는  시작시간이 있는 회의 시간 찾기
  //  - 비교를 해야될때에는 변수가 하나 있어야됨
  //    ex) min, max, 일반 거기에맞는 이름 등등
  endTime = 0;
  for (x of meeting) {
    if (endTime <= x[0]) {
      //x[0]: 시작 시간
      answer++;
      endTime = x[1];
      //x[1]: 끝나는 시간
    }
  }

  return answer; //3
};

console.log(solution(array));
